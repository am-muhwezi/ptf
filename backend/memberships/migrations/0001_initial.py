# Generated by Django 5.2.3 on 2025-08-05 07:42

import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("members", "0003_member_location"),
    ]

    operations = [
        migrations.CreateModel(
            name="MembershipPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("plan_name", models.CharField(max_length=100, unique=True)),
                (
                    "membership_type",
                    models.CharField(
                        choices=[("indoor", "Indoor"), ("outdoor", "Outdoor")],
                        default="indoor",
                        max_length=10,
                    ),
                ),
                (
                    "plan_type",
                    models.CharField(
                        choices=[
                            ("daily", "Daily Drop-in"),
                            ("weekly", "Weekly"),
                            ("monthly", "Monthly"),
                            ("quarterly", "Quarterly"),
                            ("annual", "Annual"),
                        ],
                        default="monthly",
                        max_length=20,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("single", "Single"),
                            ("couple", "Couple"),
                            ("corporate", "Corporate"),
                        ],
                        default="single",
                        max_length=20,
                    ),
                ),
                (
                    "sessions_per_week",
                    models.PositiveIntegerField(
                        default=1, help_text="Number of sessions per week"
                    ),
                ),
                (
                    "weekly_fee",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Weekly fee in KES",
                        max_digits=10,
                    ),
                ),
                (
                    "monthly_fee",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Monthly fee in KES",
                        max_digits=10,
                    ),
                ),
                (
                    "per_session_fee",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("1000.00"),
                        help_text="Per session fee in KES",
                        max_digits=10,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["membership_type", "sessions_per_week"],
            },
        ),
        migrations.CreateModel(
            name="Membership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("suspended", "Suspended"),
                            ("expired", "Expired"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                (
                    "payment_status",
                    models.CharField(
                        choices=[
                            ("paid", "Paid"),
                            ("pending", "Pending"),
                            ("overdue", "Overdue"),
                            ("partial", "Partial"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "total_sessions_allowed",
                    models.PositiveIntegerField(
                        help_text="Total sessions allowed for this membership period"
                    ),
                ),
                (
                    "sessions_used",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of sessions used"
                    ),
                ),
                (
                    "sessions_remaining",
                    models.PositiveIntegerField(help_text="Sessions remaining"),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("amount_paid", models.DecimalField(decimal_places=2, max_digits=10)),
                ("next_billing_date", models.DateField(blank=True, null=True)),
                (
                    "location",
                    models.CharField(
                        blank=True,
                        help_text="Outdoor location preference",
                        max_length=100,
                    ),
                ),
                (
                    "member",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="memberships",
                        to="members.member",
                    ),
                ),
                (
                    "plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="memberships",
                        to="memberships.membershipplan",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SessionLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_used", models.DateTimeField(auto_now_add=True)),
                (
                    "location",
                    models.CharField(
                        blank=True,
                        help_text="Where the session took place",
                        max_length=100,
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Any additional notes about the session"
                    ),
                ),
                (
                    "membership",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="session_logs",
                        to="memberships.membership",
                    ),
                ),
            ],
            options={
                "ordering": ["-date_used"],
            },
        ),
    ]
